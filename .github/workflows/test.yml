name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        build_args:
          - ""
          - " --features gsl,fftw-source --no-default-features"
          - " --features gsl,fftw-system --no-default-features"
          - " --features gsl,fftw-mkl --no-default-features"

    steps:
    - uses: actions/checkout@v3
    - name: Install FFTW and GSL
      run: |
        sudo apt-get update
        sudo apt-get install -y libfftw3-dev libgsl-dev
    - uses: actions-rs/toolchain@v1
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all-targets ${{ matrix.build_args }}

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install FFTW and GSL
      run: |
        sudo apt-get update
        sudo apt-get install -y libfftw3-dev libgsl-dev
    - uses: actions-rs/toolchain@v1
    - uses: actions-rs/cargo@v1
      with:
        command: test

  examples:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install FFTW and GSL
      run: |
        sudo apt-get update
        sudo apt-get install -y libfftw3-dev libgsl-dev
    - uses: actions-rs/toolchain@v1
    - uses: actions-rs/cargo@v1
      with:
        command: run
        args: --example plot_snia_curve_fits -- -n=1

  fmt:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

  clippy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install FFTW and GSL
      run: |
        sudo apt-get update
        sudo apt-get install -y libfftw3-dev libgsl-dev
    - uses: actions-rs/toolchain@v1
    - uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets -- -D warnings

  arm:

    runs-on: [self-hosted, linux, ARM64]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: build
      run: cargo build --all-targets
